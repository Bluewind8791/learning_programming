# 가로의 길이가 n 세로의 길이가 2인 바닥을
# 1*2 2*1 2*2의 덮개로 채운다
# 바닥을 채우는 모든 경우의 수를 구하는 프로그램
# 모든 방법의 수를 796796으로 나눈 나머지를 출력

# +++ input +++
# n = int(input()) # 1<= N <= 1000
n = 5


# DP Table
d = [0] * 1001

d[1] = 1
d[2] = 3


# 2 * 3의 바닥을 채우는 방법은 (n = 3)
# 2 * 2의 바닥을 채우는 방법(3가지)에서 옆으로 1 * 2의 칸이 추가가 된 것
# 이는 즉, (2 * 2의 바닥 채우기 + 1 * 2의 바닥 채우기) + (1 * 2의 바닥 채우기 + 2 * 2의 바닥 채우기)

# 이것을 일반화하면 i-2 번째 출 타일까지 채워져 있는 상황과
# i-1번째 줄 타일까지 다 채워져 있는 상황을 생각하면 된다

for i in range(3, n + 1):
    d[i] = (d[i - 1] + (2 * d[i - 2])) % 796796

print(d[n])
