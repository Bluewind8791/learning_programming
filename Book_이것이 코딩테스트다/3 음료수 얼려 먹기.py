# n * m 크기의 얼음 틀
# 구멍이 뚫려 있는 부분은 0 칸막이가 존재하는 부분은 1
# 구멍이 뚫려 있는 부분끼리 상하좌우로 붙어있는 경우 서로 연결되어 있다
# 생성되는 아이스크림의 총 개수는?


# - input -
# n, m = map(int,input().split())
# iceMold = []
# for _ in range(n):
#     iceMold.append(list(map(int, input().split())))

n = 15
m = 14

iceMold = [
    [0,0,0,0,0,1,1,1,1,0,0,0,0,0],
    [1,1,1,1,1,1,0,1,1,1,1,1,1,0],
    [1,1,0,1,1,1,0,1,1,0,1,1,1,0],
    [1,1,0,1,1,1,0,1,1,0,0,0,0,0],
    [1,1,0,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,1,1,1,1,1],
    [0,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [0,1,1,1,1,1,1,1,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,1,1,1,1,0,0,0],
    [1,1,1,1,1,1,1,1,1,1,0,0,1,1],
    [1,1,1,0,0,0,1,1,1,1,1,1,1,1],
    [1,1,1,0,0,0,1,1,1,1,1,1,1,1]
]

x, y = 0, 0
move_x = [0,0,1,-1]
move_y = [1,-1,0,0]


def dfs(depth):
    if depth == n:
        return
    
    for i in range(4)