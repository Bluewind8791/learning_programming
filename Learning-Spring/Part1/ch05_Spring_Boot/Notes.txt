
** IoC (Inversion of Control) {

    스프링에서는 일반적인 자바 객체를 new로 생성하여
    개발자가 관리하는것이 아닌
    Spring Container 에 모두 맡긴다.

    즉, 개발자에서 -> 프레임워크로 
    제어의 객체 관리의 '권한이 넘어갔음'으로 
    "제어의 역전(IoC)"이라 한다.
}

** DI (Dependency Injection) {

    DI 장점 {
        - 의존성으로 부터 격리시켜 코드 테스트에 용이하다.
        - DI 를 통하여, 불가능한 상황을 Mock 와 같은 기술을 통하여 안정적으로 테스트 가능
        - 코드를 확장하거나 변경할떄 영향 최소화 (추상화)
        - 순환 참조를 막을수있다.
    }
}



** AOP (Aspect Oriented Programming : 관점지향 프로그램) {

    스프링 어플리케이션은 대부분 특별한 경우를 제외하고는
    MVC 웹 어플리케이션에서는 Web Layer, Business Layer, Data Layer로 정의.

    - Web Layer : REST API 제공, Client 중심의 로직 적용
    - Business Layer : 내부 정책에 따른 logic 개발, 해당 부분을 개발
    - Data Layer : 데이터베이스 및 외부와의 연동 처리
    
}
