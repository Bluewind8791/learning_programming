
** 생성 패턴 **
객체를 생성하는 것과 관련된 패턴
객체의 생성고 변경이 전체 시스템에 미치는 영향을 최소화
코드의 유연성 증가

- Singleton
- Builder
- Chaining


* Singleton Pattern

클래스가 유일하게 1개만 존재할때
서로 자원을 공유할때 사용하는데
실물 세계에서는 프린터가 해당.


/////////////////////////////////////////////////////////


** 구조 패턴 **
큰 규모의 시스템에서는 많은 클래스들이 서로 의존성을 가지게되는데
이런 복잡한 구조를 개발하기 쉽게 만들어주고
유지 보수 하기 쉽게 함

- Adapter
- Decorator
- Facade
- Proxy

* Adapter pattern

Adapter 는 실생활에서 100v 를 220v로 변환해주는 변환기를 예로 들수있음
호환성이 없는 기존 클래스의 인터페이스를 변환하여 재사용할수있게
SOLID 중에서 개방폐쇄원칙(OCP) 를 따름

* Proxy Pattern

대리인이라는 뜻.
뭔가를 대신하여 처리.

Proxy Class 를 통하여 대신 전달하는 형태로 설계
실제 Client는 Proxy로 부터 결과를 받음.

Cache의 기능으로도 활용 가능.
SOLID 중에서 개방폐쇄원칙(OCP) 와 의존역전원칙(DIP)를 따름.

/////////////////////////////////////////////////////////


** 행위 패턴 **
상호작용하는 방법과 책임을 분산하는 방법
행위 관련 패턴을 사용하여 독립적으로 일을 처리하고자 할때

- Observer
- Strategy

